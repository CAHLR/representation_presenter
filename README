This tool is to analyze event-log files, such as log data from website,  netflow or somethings like a specific management system. 
Give an inputfile and some parameters, and you will get a visualization about the dataset.


SYNOPSIS
	python representation_presenter.py [options]


OPTIONS
	INPUT AND OUTPUT:
	-i inputfile_name,input_type
		type '1': Pre-processing file, train list for word2vec(txt)
		type '2': Vector file after word2vec with key for token(tsv)
		type '3': Raw file, event log file(tsv)
		Default: type '3'

	-o outputfile_name,output_type
		type '1': Pre-processing file, train list for word2vec(txt)
		type '2': Vector file after word2vec with key for token(tsv)
		type '3': 2D Vector file
		type '4': All three types above
		Default: type '3'

	There should be no space between file name and file type.


	PARAMETERS FOR WORD2VEC
	-e epoch num
		Iteration times for word2vec. Default 50.

	-n negative
   		Negative sampling when using word2vec. Default 10.

	-v vector size
   		Vector size when using word2vec(size). Default 100.

	-w window size
		Window size when using word2vec(window). Default 10.

	-c min count
		Min count number when using word2vec(min_count).



	KEYS
	-g group_by_key
		Group by. 
	
	-s sort_by_key
		Sort by.

	-k token1,token2,token3...(no space)
		Tokens for analysis

	-f factor1, factor2, factor3...
	    factors that are attributes of tokens added to the word2vec model (Only when building multifactor-2vec model)
	    if not none, softmax will be used instead of negative sampling. -n will be set as 0.

	-m dim
		Dimension of data points in output file(after t-sne)


	OTHERS

	-pt if just run word2vec without factors, determine to use either gensim or pytorch
	    If -f is not none, use pytorch as default
	    if -f is none, determine which to use, gensim or pytorch

	-t t-sne_path
   		When using t-sne, choose this command. And there should be files 'fast_t-sne.m' and 'bh_t-sne' in t-sne_path.

   	-dd
   		If you use this option, duplications won't be removed when generate training list

   	-ff featurefile,type
   	    type determines how to merge feature file and vector file
   		type 'inner': intersection
   		type 'left' : save rows in vector file only
   		type 'right': save rows in feature file only

   	-l if calculating val loss


Example: Input file are row event log file and output are all files, then use command:

	python/python3 representation_presenter.py -i input.tsv,3 -o n10_vs50_ws2.tsv,4 -g basic_type -s time -k username -t /home/xingzb14/tsne -n 10 -v 50 -c 5 -w 2



